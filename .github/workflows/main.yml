name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
  workflow_dispatch:

env:
  artifact_name: app_ver_${{ github.sha }}


jobs:
  docker_upload:
     runs-on: ubuntu-latest
     needs: [test]
     steps:
       - uses: actions/checkout@v1
       - name: Publish to Docker Hub
         
         uses: docker/build-push-action@v1
         with:
           username: ${{ secrets.DOCKER_USER }}
           password: ${{ secrets.DOCKER_PASSWORD }}
           repository: gfgfgfgf1/devops_2022
           tags: latest, ${{ github.sha }}
        
  cpplint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
    - run: pip install cpplint
    - run: cpplint --recursive .
    
    
  build_ubuntu_macos:
    runs-on: ${{ matrix.os }}
    needs: [cpplint]
    env:
      app_name: app-${{ matrix.os }}_ver.${{ github.sha }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
    steps:
      - uses: actions/checkout@v3
      - name: build
        run: |
          g++ main.cpp Deanary.cpp Group.cpp Student.cpp -o ${{ env.app_name }}
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ${{ env.artifact_name }}
          path: ${{ env.app_name }}
          if-no-files-found: error
          
  test:
    runs-on: ubuntu-latest
    needs: [build_ubuntu_macos, build_win]
    steps:
      - uses: actions/checkout@v3
      - name: Install gtest manually
        run: sudo apt-get install libgtest-dev
      - name: build
        run: |
          g++ tests.cpp main.cpp Deanary.cpp Group.cpp Student.cpp -lgtest -lpthread -o test
          ./test
          
  build_win:
    runs-on: windows-2022
    needs: [cpplint]
    env:
      app_name: app-win22_ver.${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1.10.0
      - name: build_win
        run: |
          cl /EHsc main.cpp Deanary.cpp Group.cpp Student.cpp /Fe: app-win22_ver.${{ github.sha }}.exe
          ls
          
          
      - name: Upload a Build Artifact_win
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ${{ env.artifact_name }}
          path: "*.exe"
          if-no-files-found: error
        
      
  report:
    if: failure()
    runs-on: ubuntu-latest
    needs: [docker_upload]
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ERORR
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
